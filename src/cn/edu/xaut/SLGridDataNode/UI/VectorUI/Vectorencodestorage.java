/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Vectorencodestorage.java
 *
 * Created on 2011-2-8, 11:43:36
 */

package cn.edu.xaut.SLGridDataNode.UI.VectorUI;

import cn.edu.xaut.SLGridDataNode.Util.*;
import cn.edu.xaut.VectorEncode.EncodeExample;
import cn.edu.xaut.VectorEncode.MediateXML;
import cn.edu.xaut.VectorEncode.MessageDialogue;
import org.jdom.Element;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/**
 * @author greensubmarine
 */
public class Vectorencodestorage extends javax.swing.JFrame {

MediateXML mediate = new MediateXML();

Map<String, String> vectornamemap = new HashMap<String, String>();
Map<int[], String> vectormaps = new HashMap<int[], String>();

NowVectorPreElementBean vectorpreelmentbean = new NowVectorPreElementBean();
NowVectorPostElementBean vectorpostelementbean = new NowVectorPostElementBean();
ParentVectorPreElementBean parentvectorpreelementbean = new ParentVectorPreElementBean();
ParentVectorPostElementBean parentvectorpostelementbean = new ParentVectorPostElementBean();
Map<int[], int[]> nowvectorelement = new HashMap<int[], int[]>();
ArrayList<int[]> nowvectorpreelement = new ArrayList<int[]>();
//Map<int[], int[]> nowvectorpreelement = new HashMap<int[], int[]>();
ArrayList<int[]> nowvectorpostelement = new ArrayList<int[]>();
ArrayList<int[]> parentvectorpreelement = new ArrayList<int[]>();
ArrayList<int[]> parentvectorpostelement = new ArrayList<int[]>();
EncodeExample encode = new EncodeExample();
/**
 * Creates new form Vectorencodestorage
 */
Map<Integer, int[]> result = new HashMap<Integer, int[]>();

public Vectorencodestorage() {
    initComponents();
}

/**
 * This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jTextField1 = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setName("Form"); // NOI18N

    jPanel1.setName("jPanel1"); // NOI18N

    jLabel1.setText(org.openide.util.NbBundle.getMessage(Vectorencodestorage.class, "Vectorencodestorage.jLabel1.text")); // NOI18N
    jLabel1.setName("jLabel1"); // NOI18N

    jTextField1.setText(org.openide.util.NbBundle.getMessage(Vectorencodestorage.class, "Vectorencodestorage.jTextField1.text")); // NOI18N
    jTextField1.setName("jTextField1"); // NOI18N

    jButton1.setText(org.openide.util.NbBundle.getMessage(Vectorencodestorage.class, "Vectorencodestorage.显示.text")); // NOI18N
    jButton1.setName("显示"); // NOI18N
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                                      .addContainerGap()
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                          .addComponent(jLabel1)
                                                                          .addGap(339, 339, 339))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                          .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                                                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                          .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                          .addContainerGap())))
    );
    jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                                      .addContainerGap()
                                      .addComponent(jLabel1)
                                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton1))
                                      .addContainerGap(20, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
}// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
         /* result = encode.Getnowvectorencode(jTextField1.getText());
          Map<String, String> NowTempMap = encode.GetOrderMap(jTextField1.getText());

          Map<String, DietzEncode> parentmap = encode.GetParentMap(jTextField1.getText());

          for(Map.Entry<String, String> tempMap : NowTempMap.entrySet()){
             nowvectorelement.put(result.get(Integer.parseInt(tempMap.getKey())), result.get(Integer.parseInt(tempMap.getValue())));
          }

          encode.Adddocumentlabel(parentmap, result);
          for(Map.Entry<String, DietzEncode> parentmaps : parentmap.entrySet()){
           nowvectorpreelement.add(result.get(Integer.parseInt(parentmaps.getKey())));
           nowvectorpostelement.add(nowvectorelement.get((result.get(Integer.parseInt(parentmaps.getKey())))));
           parentvectorpreelement.add(result.get(parentmaps.getValue().GetParentPre()));
           parentvectorpostelement.add(result.get(parentmaps.getValue().GetParentPost()));

           NowVectorPreElementBean.Setnowvectorpreelement(nowvectorpreelement);
           NowVectorPostElementBean.Setnowvectorpostelement(nowvectorpostelement);
           ParentVectorPreElementBean.Setparentprevectorelement(parentvectorpreelement);
           ParentVectorPostElementBean.Setparentvectorpostelement(parentvectorpostelement);
          }*/

    String newxmlfile = mediate.Productcode(jTextField1.getText().toString());
    Element root = encode.Getroot(newxmlfile);
    int elementcounts = EncodeExample.ElementcountProcess(root);
    XMLFileBean.Setnewxmlfile(newxmlfile);
    String newvectorencodexmlfile = mediate.GenerateVectorXMLFile(newxmlfile, elementcounts);
    System.out.println(newvectorencodexmlfile);
    XMLFileBean.SetXMLFile(newvectorencodexmlfile);
    XMLFileBean.SetOriginalXMLFileName(jTextField1.getText().toString());
           /*Element vectorroots = encode.Getroot(jTextField1.getText().toString());
           vectornamemap = encode.GetVectorElementNames(vectorroots);
           vectormaps = encode.GetVectorElements(vectorroots);
           String Elementname = encode.GetElementName(root);*/

    System.out.println(elementcounts);
    System.out.println(jTextField1.getText());
    System.out.println(newxmlfile);
    Map<Integer, int[]> sresult = new HashMap<Integer, int[]>();
    int[][] code = new int[2][elementcounts];
    code[0][0] = 1;
    code[1][0] = 0;
    code[0][elementcounts - 1] = 0;
    code[1][elementcounts - 1] = 1;
    MediateXML.encode(code, 0, elementcounts - 1);
    sresult = MediateXML.Vectorresult(code);
    Map<String, String> NowTempMap = encode.GetOrderMap(newxmlfile);
    for (Map.Entry<String, String> ThisEntry : NowTempMap.entrySet()) {
        nowvectorelement.put(sresult.get(Integer.parseInt(ThisEntry.getKey())), sresult.get(Integer.parseInt(ThisEntry.getValue())));
    }
    Map<String, DietzEncode> parenttempmap = encode.GetParentMap(newxmlfile);

    for (Map.Entry<String, DietzEncode> entry : parenttempmap.entrySet()) {
        if ((entry.getValue().GetParentPre() == 0) || (entry.getValue().GetParentPost() == elementcounts + 1)) {
            int[] rootparentprecode = {10000, 10000};
            int[] rootparentpostcode = {-10000, -10000};
            sresult.put(0, rootparentprecode);
            sresult.put(elementcounts + 1, rootparentpostcode);
        }
        nowvectorpreelement.add(sresult.get(Integer.parseInt(entry.getKey())));
        NowVectorPreElementBean.Setnowvectorpreelement(nowvectorpreelement);
        nowvectorpostelement.add(nowvectorelement.get((sresult.get(Integer.parseInt(entry.getKey())))));
        NowVectorPostElementBean.Setnowvectorpostelement(nowvectorpostelement);
        parentvectorpreelement.add(sresult.get(entry.getValue().GetParentPre()));
        ParentVectorPreElementBean.Setparentprevectorelement(parentvectorpreelement);
        parentvectorpostelement.add(sresult.get(entry.getValue().GetParentPost()));
        ParentVectorPostElementBean.Setparentvectorpostelement(parentvectorpostelement);
        //System.out.println("当前节点的先序编码是："+entry.getKey()+" 父节点先序编码是： "+entry.getValue().GetParentPre()+" 父节点后序编码是："+entry.getValue().GetParentPost());
    }
    //testmap.put("(10000,10000)", "Document");
    vectornamemap.put("(10000,10000)", "Document");
    //encode.GetParentVectorMaps(jTextField1.getText(), elementcounts);
    //encode.GetParentVectorMap(jTextField1.getText().toString());

    new MessageDialogue().setVisible(true);

}//GEN-LAST:event_jButton1ActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {

        public void run() {
            new Vectorencodestorage().setVisible(true);
        }
    });
}

// Variables declaration - do not modify//GEN-BEGIN:variables
private javax.swing.JButton jButton1;
private javax.swing.JLabel jLabel1;
private javax.swing.JPanel jPanel1;
private javax.swing.JTextField jTextField1;
// End of variables declaration//GEN-END:variables

}
