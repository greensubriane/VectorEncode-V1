/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package cn.edu.xaut.SLGridDataNode;

/**
 * @author greensubmarine
 */

import cn.edu.xaut.SLGridDataNode.GUI.AddNode;
import cn.edu.xaut.SLGridDataNode.Tool.ScreenSize;
import cn.edu.xaut.SLGridDataNode.Util.LoginNodeBean;

import javax.swing.*;
import java.awt.event.KeyEvent;

public class LoginNode extends JFrame {
/** Creates new form LoginNode */
public LoginNode() {
    initComponents();
    setBounds((ScreenSize.getWidth() - getWidth()) / 2, (ScreenSize.getHeight() - getHeight()) / 2, getWidth(), getHeight());
    this.setResizable(false);
}

/** This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code">
private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    IPTextField = new javax.swing.JTextField();
    PortNumTextField = new javax.swing.JTextField();
    UsernameTextField = new javax.swing.JTextField();
    jPasswordField1 = new javax.swing.JPasswordField();
    jSeparator1 = new javax.swing.JSeparator();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();
    DBTypeComboBox = new javax.swing.JComboBox();
    new cn.edu.xaut.SLGridDataNode.Util.PlafView().ChangeView();
    setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("节点登陆窗体"));
    jPanel1.setName("jPanel1"); // NOI18N

    jLabel1.setText("     节点IP：");
    jLabel1.setName("jLabel1"); // NOI18N

    jLabel2.setText("     端口号：");
    jLabel2.setName("jLabel2"); // NOI18N

    jLabel3.setText("    节点类型：");
    jLabel3.setName("jLabel3"); // NOI18N

    jLabel4.setText("    用户名称：");
    jLabel4.setName("jLabel4"); // NOI18N

    jLabel5.setText("    用户密码：");
    jLabel5.setName("jLabel5"); // NOI18N

    IPTextField.setName("jTextField1"); // NOI18N

    PortNumTextField.setName("jTextField2"); // NOI18N

    UsernameTextField.setName("jTextField4"); // NOI18N

    jPasswordField1.setName("jTextField5"); // NOI18N

    jSeparator1.setName("jSeparator1"); // NOI18N

    jButton1.setText("登陆节点");
    jButton1.setName("jButton1"); // NOI18N
    jButton1.setMnemonic(KeyEvent.VK_ENTER);
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed();
        }
    });

    jButton2.setText("清空单元");
    jButton2.setName("jButton2"); // NOI18N
    jButton2.setMnemonic(KeyEvent.VK_E);
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jButton3.setText("添加节点");
    jButton3.setName("jButton3"); // NOI18N
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    DBTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"SQLSERVER2005", "MYSQL", "SQLSERVER2000", "DB2", "ORACLE", "PostgreSQL"}));
    DBTypeComboBox.setName("DBTypeComboBox"); // NOI18N

    jPasswordField1.setName("jPasswordField1"); // NOI18N

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                                      .addContainerGap()
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                          .addComponent(jLabel2)
                                                                          .addGap(27, 27, 27)))
                                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jPasswordField1)
                                                        .addComponent(UsernameTextField)
                                                        .addComponent(DBTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(PortNumTextField)
                                                        .addComponent(IPTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                                      .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                                      .addComponent(jButton1)
                                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                      .addComponent(jButton2)
                                      .addGap(26, 26, 26)
                                      .addComponent(jButton3))
    );
    jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                                      .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(IPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                      .addGap(45, 45, 45)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(PortNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                      .addGap(51, 51, 51)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(DBTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                      .addGap(46, 46, 46)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel4)
                                                        .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                      .addGap(41, 41, 41)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                      .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                      .addGap(18, 18, 18)
                                      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton1)
                                                        .addComponent(jButton3)
                                                        .addComponent(jButton2)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
}// </editor-fold>

private void jButton1ActionPerformed() {
    // TODO add your handling code here:
    String IPText = IPTextField.getText().trim();
    String PortNumText = PortNumTextField.getText().trim();
    String DBTypeText = (String) DBTypeComboBox.getSelectedItem();
    String UsernameText = UsernameTextField.getText().trim();
    String PasswordText = jPasswordField1.getText().trim();

    if (IPText.length() == 0 || PortNumText.length() == 0 || DBTypeText.length() == 0 || UsernameText.length() == 0 || PasswordText.length() == 0) {
        JOptionPane.showMessageDialog(null, "请输入正确的信息");
        return;
    } else {
        //Db dbtest1=new Db();
        //dbtest1.setDbname(db);
        //LoginNodeBean.setDB(dbtest1);
        //LoginNode.setDb(dbtest1);
        LoginNodeBean.setIP(IPText);
        //LoginNode.setIP(IPText);
        LoginNodeBean.setPortNum(PortNumText);
        //LoginNode.setPortNum(PortNumText);
        LoginNodeBean.setDBType(DBTypeText);
        //LoginNode.setDBType(DBTypeText);
        LoginNodeBean.setUsername(UsernameText);
        //LoginNode.setUsername(UsernameText);
        LoginNodeBean.setPassword(PasswordText);
        //LoginNode.setPassword(PasswordText);
        this.setVisible(false);
        //new NodeLook().setVisible(true);

    }
}

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    Object source = evt.getSource();
    if (source == jButton2) {
        IPTextField.setText("");
        PortNumTextField.setText("");
        UsernameTextField.setText("");
        jPasswordField1.setText("");
    }
}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    this.setVisible(false);
    new AddNode().setVisible(true);
}

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
        @Override
        public void run() {
            new LoginNode().setVisible(true);
        }
    });
}

// Variables declaration - do not modify
private javax.swing.JButton jButton1;
private javax.swing.JButton jButton2;
private javax.swing.JButton jButton3;
private javax.swing.JComboBox DBTypeComboBox;
private javax.swing.JLabel jLabel1;
private javax.swing.JLabel jLabel2;
private javax.swing.JLabel jLabel3;
private javax.swing.JLabel jLabel4;
private javax.swing.JLabel jLabel5;
private javax.swing.JPanel jPanel1;
private javax.swing.JSeparator jSeparator1;
private javax.swing.JTextField IPTextField;
private javax.swing.JTextField PortNumTextField;
private javax.swing.JTextField UsernameTextField;
private javax.swing.JPasswordField jPasswordField1;
// End of variables declaration


  /* private static Db dbtest;
    private static String Username, Password, IP, PortNum, DBType;
    
    //dbtest = LoginNodeBean.getDB();

    public static Db getDb() {
        return dbtest;
	}
    public static void setDb(Db dbtest) {
          LoginNode.dbtest = dbtest;
	}
    public static String getUsername(){
        return Username;
    }
    public static void setUsername(String Usernames){
       Username = Usernames;
    }
    public static String getPassword(){
        return Password;
    }
    public static void setPassword(String Passwords){
        Password = Passwords;
    }
    public static String getIP(){
        return IP;
    }
    public static void setIP(String IPs){
        IP = IPs;
    }
    public static String getPortNum(){
        return PortNum;
    }
    public static void setPortNum(String PortNums){
        PortNum = PortNums;
    }
    public static String getDBType(){
        return DBType;
    }
    public static void setDBType(String DBTypes){
        DBType = DBTypes;
    }

   public void key_press_event(KeyEvent e)
  {
            if(e.getKeyCode()==KeyEvent.VK_ENTER){
              jButton1ActionPerformed();
              }
  }*/
}
